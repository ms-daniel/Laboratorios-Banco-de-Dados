CREATE DATABASE TRIGGER2

USE TRIGGER2

CREATE TABLE TB_CARGO (
 CD_CARGO INT NOT NULL PRIMARY KEY,
 NM_CARGO VARCHAR(50) NOT NULL
)

INSERT INTO TB_CARGO VALUES(1, 'ANALISTA')
INSERT INTO TB_CARGO VALUES(2, 'DBA')
INSERT INTO TB_CARGO VALUES(3, 'PROGRAMADOR')


CREATE TABLE TB_ESCOLARIDADE (
  CD_ESCOLARIDADE INT NOT NULL PRIMARY KEY,
  NM_ESCOLARIDADE VARCHAR(50) NOT NULL
)

INSERT INTO TB_ESCOLARIDADE VALUES (1, 'NÍVEL MÉDIO')
INSERT INTO TB_ESCOLARIDADE VALUES (2, 'NÍVEL SUPERIOR')
INSERT INTO TB_ESCOLARIDADE VALUES (3, 'PÓS-GRADUAÇÃO')


CREATE TABLE TB_FAIXASALARIAL (
  CD_CARGO INT NOT NULL,
  CD_ESCOLARIDADE INT NOT NULL,
  MENOR_VALOR  NUMERIC(10,2) NOT NULL,
  MAIOR_VALOR  NUMERIC(10,2) NOT NULL
  PRIMARY KEY (CD_CARGO, CD_ESCOLARIDADE)
)

INSERT INTO TB_FAIXASALARIAL VALUES(1,1,900.0, 1100.0)
INSERT INTO TB_FAIXASALARIAL VALUES(1,2,1200.0, 1300.0)
INSERT INTO TB_FAIXASALARIAL VALUES(1,3,1400.0, 1500.0)

INSERT INTO TB_FAIXASALARIAL VALUES(2,1,600.0, 700.0)
INSERT INTO TB_FAIXASALARIAL VALUES(2,2,800.0, 1000.0)
INSERT INTO TB_FAIXASALARIAL VALUES(2,3,1100.0, 1500.0)

INSERT INTO TB_FAIXASALARIAL VALUES(3,1,1300.0, 1500.0)
INSERT INTO TB_FAIXASALARIAL VALUES(3,2,2000.0, 2500.0)
INSERT INTO TB_FAIXASALARIAL VALUES(3,3,3000.0, 3500.0)


CREATE TABLE TB_FUNCIONARIO (
  MATRICULA INT NOT NULL PRIMARY KEY,
  NOME VARCHAR(30) NOT NULL,
  CD_CARGO INT, 
  CD_ESCOLARIDADE INT,
  SALARIO NUMERIC (10,2)
)  

--1. Criar uma Trigger do tipo AFTER INSERT para a tabela TB_FUNCIONARIO para assegurar que o valor
--do salário incluído para um funcionário está dentro da faixa salarial
--determinada para seu cargo e escolaridade.
CREATE OR ALTER TRIGGER TG_FUNC_INSERT_UPDATE
ON TB_FUNCIONARIO
AFTER INSERT, UPDATE
AS
BEGIN
	DECLARE @MENOR_S NUMERIC(10,2),
			@MAIOR_S NUMERIC(10,2),
			@CARGO INT, @ESCOL INT,
			@SALARIO NUMERIC(10,2)

	DECLARE C_FUN CURSOR FOR SELECT CD_CARGO, CD_ESCOLARIDADE, SALARIO FROM INSERTED
	OPEN C_FUN
	FETCH C_FUN INTO @CARGO, @ESCOL,@SALARIO
	WHILE(@@FETCH_STATUS = 0)
	BEGIN
		SET @MENOR_S = (SELECT MENOR_VALOR FROM TB_FAIXASALARIAL WHERE @CARGO = CD_CARGO AND @ESCOL = CD_ESCOLARIDADE)
		SET @MAIOR_S = (SELECT MAIOR_VALOR FROM TB_FAIXASALARIAL WHERE @CARGO = CD_CARGO AND @ESCOL = CD_ESCOLARIDADE)
		IF(@SALARIO < @MENOR_S OR @SALARIO > @MAIOR_S)
		BEGIN
			raiserror('SALARIO INCOMPATIVEL',1,1)
			ROLLBACK
			RETURN
		END

		FETCH C_FUN INTO @CARGO, @ESCOL,@SALARIO
	END
	CLOSE C_FUN
	DEALLOCATE C_FUN
END

INSERT INTO TB_FUNCIONARIO VALUES(1, 'JOSE', 1, 2, 1300),
								(2, 'MARIA', 1,1, 1100)

INSERT INTO TB_FUNCIONARIO VALUES(3, 'MAEIZNHA', 1, 2, 1300),
								(4, 'MARITROSS', 1,1, 1100)


--2. Criar uma Trigger do tipo AFTER UPDATE para a tabela TB_FUNCIONARIO para assegurar que o valor do
--salário atualizado para um funcionário está dentro da faixa salarial determinada para seu cargo e escolaridade

UPDATE TB_FUNCIONARIO
SET SALARIO = 1301
WHERE MATRICULA = 1

--3. As triggers criadas funcionariam se fizéssemos a atualização ou inserção de mais de um funcionário utilizando um único comando ?
--sim

SELECT * FROM TB_CARGO
SELECT * FROM TB_ESCOLARIDADE
SELECT * FROM TB_FAIXASALARIAL
SELECT * FROM TB_FUNCIONARIO

DELETE FROM TB_FUNCIONARIO

DROP TABLE TB_FUNCIONARIO

